{"version":3,"file":"commonHelpers.js","sources":["../src/js/render-functions.js","../src/js/pixabai-api.js","../src/main.js"],"sourcesContent":["export const createMarkup = images => {\n  return images.reduce(\n    (\n      html,\n      { tags, webformatURL, largeImageURL, likes, views, comments, downloads }\n    ) => {\n      return (\n        html +\n        `<li class=\"photo-container\">\n    <a href=${largeImageURL} class=\"card-link js-card-link\">\n        <img class=\"photo\" src=\"${webformatURL}\" alt=\"${tags}\" >\n    </a>\n    <div class=\"info\">\n        <div class=\"info-item\">\n            <span class=\"title\">Likes</span>\n            <span class=\"info\">${likes}</span>\n        </div>\n        <div class=\"info-item\">\n            <span class=\"title\">Views</span>\n            <span class=\"info\">${views}</span>\n        </div>\n        <div class=\"info-item\">\n            <span class=\"title\">Comments</span>\n            <span class=\"info\">${comments}</span>\n        </div>\n        <div class=\"info-item\">\n            <span class=\"title\">Downloads</span>\n            <span class=\"info\">${downloads}</span>\n        </div>\n    </div>\n</li>\n    `\n      );\n    },\n    ''\n  );\n};\n","import axios from 'axios';\nexport const perPage = 15;\nconst BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '43705346-f08330685c72fc18a8a8b3aad';\n\n const fetchPhotos = async (searchImage, page) => {\n    const response = await axios.get(BASE_URL, {\n      params: {\n        key: API_KEY,\n        q: searchImage,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: 'true',\n        page: page,\n        per_page: perPage,\n      }\n    })\n    return response.data;\n};\n\nexport default fetchPhotos;","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { createMarkup } from './js/render-functions';\nimport fetchPhotos from './js/pixabai-api';\n\nconst imgContainer = document.querySelector('.gallery');\nconst searchForm = document.querySelector('.search-form');\nconst loaderEl = document.querySelector('.loader');\nconst fetchPhotosBtn = document.querySelector('.photo-btn');\n\nlet page = 1;\nlet limit = 15;\nconst totalPages = Math.ceil(100 / limit);\n\n\nfetchPhotosBtn.addEventListener('click', async () => {\n  try {\n    if (page > totalPages) {\n      return iziToast.error({\n        position: 'topRight',\n        message: \"We're sorry, there are no more photos to load\",\n      });\n    }\n\n    const searchQuery = searchForm.elements.searchKeyword.value.trim();\n    const photos = await fetchPhotos(searchQuery, page);\n    createMarkup(photos);\n\n    page += 1;\n    if (page > totalPages) {\n      fetchPhotosBtn.textContent = 'No more photos';\n    }\n  } catch (error) {\n    console.log(error);\n  }\n});\n\n\nfunction onSearch(event) {\n  event.preventDefault();\n  const searchQuery = event.target.elements.searchKeyword.value.trim();\n  imgContainer.innerHTML = '';\n  if (searchQuery === '') {\n    return iziToast.error({\n      message:\n        'Sorry, there are no images matching your search query. Please try again!',\n    });\n  }\n  imgContainer.innerHTML = '';\n  loaderEl.classList.remove('is-hidden');\n\n  fetchPhotos(searchQuery)\n    .then(imagesData => {\n      if (imagesData.hits.length === 0) {\n        iziToast.error({\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n        });\n      }\n\n      imgContainer.innerHTML = createMarkup(imagesData.hits);\n      const lightbox = new SimpleLightbox('.gallery a', {\n        captionsData: 'alt',\n        captionsDelay: 250,\n      });\n      lightbox.refresh();\n    })\n    .catch(error => console.log(error))\n    .finally(() => {\n      event.target.reset();\n      loaderEl.classList.add('is-hidden');\n    });\n}\n\nsearchForm.addEventListener('submit', onSearch);\n\n\n"],"names":["createMarkup","images","html","tags","webformatURL","largeImageURL","likes","views","comments","downloads","perPage","BASE_URL","API_KEY","fetchPhotos","searchImage","page","axios","imgContainer","searchForm","loaderEl","fetchPhotosBtn","limit","totalPages","iziToast","searchQuery","photos","error","onSearch","event","imagesData","SimpleLightbox"],"mappings":"owBAAO,MAAMA,EAAeC,GACnBA,EAAO,OACZ,CACEC,EACA,CAAE,KAAAC,EAAM,aAAAC,EAAc,cAAAC,EAAe,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAW,IAGtEP,EACA;AAAA,cACMG,CAAa;AAAA,kCACOD,CAAY,UAAUD,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,iCAK3BG,CAAK;AAAA;AAAA;AAAA;AAAA,iCAILC,CAAK;AAAA;AAAA;AAAA;AAAA,iCAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,iCAIRC,CAAS;AAAA;AAAA;AAAA;AAAA,MAOtC,EACJ,EClCaC,EAAU,GACjBC,EAAW,2BACXC,EAAU,qCAETC,EAAc,MAAOC,EAAaC,KACpB,MAAMC,EAAM,IAAIL,EAAU,CACzC,OAAQ,CACN,IAAKC,EACL,EAAGE,EACH,WAAY,QACZ,YAAa,aACb,WAAY,OACZ,KAAMC,EACN,SAAUL,CACX,CACP,CAAK,GACe,KCVdO,EAAe,SAAS,cAAc,UAAU,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAW,SAAS,cAAc,SAAS,EAC3CC,EAAiB,SAAS,cAAc,YAAY,EAE1D,IAAIL,EAAO,EACPM,EAAQ,GACZ,MAAMC,EAAa,KAAK,KAAK,IAAMD,CAAK,EAGxCD,EAAe,iBAAiB,QAAS,SAAY,CACnD,GAAI,CACF,GAAIL,EAAOO,EACT,OAAOC,EAAS,MAAM,CACpB,SAAU,WACV,QAAS,+CACjB,CAAO,EAGH,MAAMC,EAAcN,EAAW,SAAS,cAAc,MAAM,OACtDO,EAAS,MAAMZ,EAAYW,EAAaT,CAAI,EAClDf,EAAayB,CAAM,EAEnBV,GAAQ,EACJA,EAAOO,IACTF,EAAe,YAAc,iBAEhC,OAAQM,EAAO,CACd,QAAQ,IAAIA,CAAK,CAClB,CACH,CAAC,EAGD,SAASC,EAASC,EAAO,CACvBA,EAAM,eAAc,EACpB,MAAMJ,EAAcI,EAAM,OAAO,SAAS,cAAc,MAAM,OAE9D,GADAX,EAAa,UAAY,GACrBO,IAAgB,GAClB,OAAOD,EAAS,MAAM,CACpB,QACE,0EACR,CAAK,EAEHN,EAAa,UAAY,GACzBE,EAAS,UAAU,OAAO,WAAW,EAErCN,EAAYW,CAAW,EACpB,KAAKK,GAAc,CACdA,EAAW,KAAK,SAAW,GAC7BN,EAAS,MAAM,CACb,QACE,0EACZ,CAAS,EAGHN,EAAa,UAAYjB,EAAa6B,EAAW,IAAI,EACpC,IAAIC,EAAe,aAAc,CAChD,aAAc,MACd,cAAe,GACvB,CAAO,EACQ,QAAO,CACtB,CAAK,EACA,MAAMJ,GAAS,QAAQ,IAAIA,CAAK,CAAC,EACjC,QAAQ,IAAM,CACbE,EAAM,OAAO,QACbT,EAAS,UAAU,IAAI,WAAW,CACxC,CAAK,CACL,CAEAD,EAAW,iBAAiB,SAAUS,CAAQ"}